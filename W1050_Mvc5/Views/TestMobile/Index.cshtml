
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>



<p>
    我是PC页面.
</p>

<p>
    您现在浏览的文件，是 Index.cshtml
</p>




<p>
    假设某个网站， 针对 PC, 平板电脑， 手机，  有3套不同样式的页面。

    <br/>

    如果由于设计初期， 没有考虑到设计一套 自适应 的页面。
    一开始就是先针对某种设备， 完成了开发。
    后期， 需要扩展到其他的平台上。

    <br />
    例如，项目初期，是针对手机，开发的网站。
    手机网站全部做好了。
    然后，才想起来，PC 页面也是需要的。
    但是，已有的手机页面，设计得极其妖孽，直接放 PC 上是不可能的。
    而且，手机页面，是客户已经认可的了，是不允许再做改动的了。

    <br />
    本例子，通过 Index.cshtml 与 Index.mobile.cshtml， 来实现， 不修改控制器代码。 只增加额外的页面代码，来实现这种新增平台页面的需求。

</p>



<div>
    <a href="/TestMobile/TestErrorPage"> 尝试触发一个错误 ...</a>
</div>


<div>
    <a href="/TestMobile/TestOutputCache"> 测试有【OutputCache】的情况. </a>
</div>

<div>
    <a href="/TestMobile/TestOutputCacheVaryByCustom"> 测试【OutputCache + VaryByCustom 】的情况. </a>
</div>

<div>
    <a href="/TestMobile/TestOutputCacheVaryByHeader"> 测试【OutputCache + VaryByHeader 】的情况. </a>
</div>


<div>


    <a href="/TestMobile/Index?display=mobile"> 用户自己要求，切换到手机页面. 并且后续页面都是 【手机页面】 </a>
    <br/>
    <a href="/TestMobile/Index?display=tablet"> 用户自己要求，切换到平板电脑页面. 并且后续页面都是 【平板电脑页面】 </a>

</div>


<div>

    @Html.Action(actionName: "TestPartialView")

</div>
